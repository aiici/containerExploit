package Poc

import (
	"crypto/tls"
	"fmt"
	"io/ioutil"
	"net/http"
	"strings"
	"time"
)

func K8sKubeletUnauthorized(target, port string) {
	client := &http.Client{
		Transport: &http.Transport{
			TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
		},
		Timeout: 5 * time.Second,
	}

	target += ":" + port + "/pods"

	response, err := client.Get(target)
	if err != nil {
		WriteLog(err.Error())
		return
	}
	defer response.Body.Close()
	body, err := ioutil.ReadAll(response.Body)
	if err != nil {
		WriteLog(err.Error())
		return
	}
	if response.StatusCode == 200 && strings.Contains(string(body), "apiVersion") {
		fmt.Printf("[+] [%s] 存在k8s kubelet未经授权访问漏洞!\n", target)
	} else {
		fmt.Printf("[-] [%s] 不存在k8s kubelet未经授权访问漏洞!\n", target)
	}
}
