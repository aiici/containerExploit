package Plugins

import (
	"containerExploit/Poc"
	"fmt"
)

func VerifyVulnerability(target string, scanVulnerability string) {
	switch scanVulnerability {
	case "apiserver":
		port := Exec("kube-apiserver")
		flag := len(port)
		if flag > 1 {
			for _, p := range port {
				Poc.K8sAPIServerUnauthorized(target, p)
			}

		} else {
			Poc.K8sAPIServerUnauthorized(target, port[0])
		}
	case "kubelet":
		port := Exec("kubelet")
		flag := len(port)
		if flag > 1 {
			for _, p := range port {
				Poc.K8sKubeletUnauthorized(target, p)
			}

		} else {
			Poc.K8sKubeletUnauthorized(target, port[0])
		}
	case "etcd":
		Poc.K8sEtcdUnauthorized(target)
	case "dashboard":
		Poc.K8sDashboardUnauthorized(target)
	case "cluster":
		Poc.K8sPublicClusterInfoUnauthorized(target)
	case "registry":
		Poc.DockerRegistryUnauthorized(target)
	case "remote":
		Poc.DockerRemoteUnauthorized(target)
	default:
		fmt.Printf("[-] 未知的漏洞类型: %s\n", scanVulnerability)
	}
}
